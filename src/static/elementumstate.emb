<?HEAD
    Content-Type application/octet-stream
?>

<?em
    const NodeURL = require('url');
    const QueryString = require('querystring');
    const {inflate} = require('pako');

    const method = $.req.method.toUpperCase();

    if(method == 'GET') {
        const queryData = QueryString.parse(NodeURL.parse($.req.url).query || '');
        if(typeof queryData.f == 'undefined') return $.responseCode = 404;
        const file = queryData.f + '.elem';
        if(!server.fileDB.hasIn('elementum', file)) return $.responseCode = 404;
        const buffer = await server.fileDB.readFrom('elementum', file);
        $(buffer);
    } else if(method == 'POST') {
        if(!$.static.rates) $.static.rates = new Map();
 
        const ip = $.utils.extractIP($.req);
        const r = {timestamp: Date.now(), bytes: 0};
        if($.static.rates.has(ip)) {
            const state = $.static.rates.get(ip);
            if(Date.now() - state.timestamp < 60000 * 10) {
                r.bytes = state.bytes;
            }
        }
        if(r.bytes >= 655400) {
            log(log.warn, '[ELEMENTUM] IP: ', ip, ' has hit the rate limit!');
            return $.responseCode = 429;
        }

        const buffer = await $.getBody($.req);
        const bSize = Buffer.byteLength(buffer);
        r.bytes += bSize;
        $.static.rates.set(ip, r);
        if(bSize >= 1e+7) return $.responseCode = 413;
        try {
            const raw = inflate(buffer);
            const magic = Buffer.from('ELEMENTUM\0');
            for(let i = 0; i < 8; ++i) {
                if(raw[i] != magic[i]) return $.responseCode = 400;
            }
        } catch(e) {
            return $.responseCode = 400;
        }
        const id = require('crypto').createHash('md5').update(buffer).digest('base64').replace(/=+$/, '').replace(/\//g, '_').replace(/\+/g, '-') + '.elem';
        if(!server.fileDB.hasIn('elementum', id)) server.fileDB.writeTo('elementum', id, buffer);
        $(Buffer.from(id.substring(0, id.length - 5)));
    } else $.responseCode = 405;
?>